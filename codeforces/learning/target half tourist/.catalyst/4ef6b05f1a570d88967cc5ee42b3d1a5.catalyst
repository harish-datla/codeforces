{"title":"B. The least round way","contestId":"2","problemIndex":"B","timeLimit":"2 seconds","memLimit":"64 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>There is a square matrix <span class=\"tex-span\"><i>n</i>&#x2009;&#xD7;&#x2009;<i>n</i></span>, consisting of non-negative integer numbers. You should find such a way on it that </p><ul> <li> starts in the upper left cell of the matrix; </li><li> each following cell is to the right or down from the current cell; </li><li> the way ends in the bottom right cell. </li></ul><p>Moreover, if we multiply together all the numbers along the way, the result should be the least &quot;round&quot;. In other words, it should end in the least possible number of zeros.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line contains an integer number <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">2&#x2009;&#x2264;&#x2009;<i>n</i>&#x2009;&#x2264;&#x2009;1000</span>), <span class=\"tex-span\"><i>n</i></span> is the size of the matrix. Then follow <span class=\"tex-span\"><i>n</i></span> lines containing the matrix elements (non-negative integer numbers not exceeding <span class=\"tex-span\">10<sup class=\"upper-index\">9</sup></span>).</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>In the first line print the least number of trailing zeros. In the second line print the correspondent way itself.</p>","noteHtml":null,"sampleTestcases":[{"id":1613681100416,"input":"3\n1 2 3\n4 5 6\n7 8 9\n","output":"0\nDDRR\n"}],"submitUrl":"https://codeforces.com/contest/2/submit","language":"c++"}