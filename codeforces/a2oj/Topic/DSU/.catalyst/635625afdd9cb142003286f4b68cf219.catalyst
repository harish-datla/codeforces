{"title":"D. Vessels","contestId":"371","problemIndex":"D","timeLimit":"2 seconds","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>There is a system of <span class=\"tex-span\"><i>n</i></span> vessels arranged one above the other as shown in the figure below. Assume that the vessels are numbered from 1 to <span class=\"tex-span\"><i>n</i></span>, in the order from the highest to the lowest, the volume of the <span class=\"tex-span\"><i>i</i></span>-th vessel is <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> liters.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/0db7b83cd355ec1a3d336117e286565b519900cc.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> </center><p>Initially, all the vessels are empty. In some vessels water is poured. All the water that overflows from the <span class=\"tex-span\"><i>i</i></span>-th vessel goes to the <span class=\"tex-span\">(<i>i</i>&#x2009;+&#x2009;1)</span>-th one. The liquid that overflows from the <span class=\"tex-span\"><i>n</i></span>-th vessel spills on the floor.</p><p>Your task is to simulate pouring water into the vessels. To do this, you will need to handle two types of queries:</p><ol> <li> Add <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span> liters of water to the <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span>-th vessel; </li><li> Print the number of liters of water in the <span class=\"tex-span\"><i>k</i><sub class=\"lower-index\"><i>i</i></sub></span>-th vessel. </li></ol><p>When you reply to the second request you can assume that all the water poured up to this point, has already overflown between the vessels.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line contains integer <span class=\"tex-span\"><i>n</i></span> &#x2014; the number of vessels (<span class=\"tex-span\">1&#x2009;&#x2264;&#x2009;<i>n</i>&#x2009;&#x2264;&#x2009;2&#xB7;10<sup class=\"upper-index\">5</sup></span>). The second line contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,&#x2009;<i>a</i><sub class=\"lower-index\">2</sub>,&#x2009;...,&#x2009;<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> &#x2014; the vessels&apos; capacities (<span class=\"tex-span\">1&#x2009;&#x2264;&#x2009;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&#x2009;&#x2264;&#x2009;10<sup class=\"upper-index\">9</sup></span>). The vessels&apos; capacities do not necessarily increase from the top vessels to the bottom ones (see the second sample). The third line contains integer <span class=\"tex-span\"><i>m</i></span> &#x2014; the number of queries (<span class=\"tex-span\">1&#x2009;&#x2264;&#x2009;<i>m</i>&#x2009;&#x2264;&#x2009;2&#xB7;10<sup class=\"upper-index\">5</sup></span>). Each of the next <span class=\"tex-span\"><i>m</i></span> lines contains the description of one query. The query of the first type is represented as &quot;<span class=\"tex-span\">1&#xA0;<i>p</i><sub class=\"lower-index\"><i>i</i></sub>&#xA0;<i>x</i><sub class=\"lower-index\"><i>i</i></sub></span>&quot;, the query of the second type is represented as &quot;<span class=\"tex-span\">2&#xA0;<i>k</i><sub class=\"lower-index\"><i>i</i></sub></span>&quot; (<span class=\"tex-span\">1&#x2009;&#x2264;&#x2009;<i>p</i><sub class=\"lower-index\"><i>i</i></sub>&#x2009;&#x2264;&#x2009;<i>n</i></span>, <span class=\"tex-span\">1&#x2009;&#x2264;&#x2009;<i>x</i><sub class=\"lower-index\"><i>i</i></sub>&#x2009;&#x2264;&#x2009;10<sup class=\"upper-index\">9</sup></span>, <span class=\"tex-span\">1&#x2009;&#x2264;&#x2009;<i>k</i><sub class=\"lower-index\"><i>i</i></sub>&#x2009;&#x2264;&#x2009;<i>n</i></span>).</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>For each query, print on a single line the number of liters of water in the corresponding vessel.</p>","noteHtml":null,"sampleTestcases":[{"id":1613307783463,"input":"2\n5 10\n6\n1 1 4\n2 1\n1 2 5\n1 1 4\n2 1\n2 2\n","output":"4\n5\n8\n"},{"id":1613307783464,"input":"3\n5 10 8\n6\n1 1 12\n2 2\n1 1 6\n1 3 2\n2 2\n2 3\n","output":"7\n10\n5\n"}],"submitUrl":"https://codeforces.com/problemset/submit","language":"c++"}