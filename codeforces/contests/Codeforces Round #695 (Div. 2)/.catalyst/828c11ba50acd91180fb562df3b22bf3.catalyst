{"title":"D. Sum of Paths","contestId":"1467","problemIndex":"D","timeLimit":"3 seconds","memLimit":"1024 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>There are $$$n$$$ cells, numbered $$$1,2,\\dots, n$$$ from left to right. You have to place a robot at any cell initially. The robot must make <span class=\"tex-font-style-bf\">exactly</span> $$$k$$$ moves.</p><p>In one move, the robot must move one cell to the left or right, provided that it doesn&apos;t move out of bounds. In other words, if the robot was in the cell $$$i$$$, it must move to either the cell $$$i-1$$$ or the cell $$$i+1$$$, as long as it lies between $$$1$$$ and $$$n$$$ (endpoints inclusive). The cells, in the order they are visited (including the cell the robot is placed), together make a <span class=\"tex-font-style-it\">good path</span>.</p><p>Each cell $$$i$$$ has a value $$$a_i$$$ associated with it. Let $$$c_0, c_1, \\dots, c_k$$$ be the sequence of cells in a <span class=\"tex-font-style-it\">good path</span> in the order they are visited ($$$c_0$$$ is the cell robot is initially placed, $$$c_1$$$ is the cell where the robot is after its first move, and so on; more formally, $$$c_i$$$ is the cell that the robot is at after $$$i$$$ moves). Then the value of the path is calculated as $$$a_{c_0} + a_{c_1} + \\dots + a_{c_k}$$$.</p><p>Your task is to calculate the sum of values over all possible <span class=\"tex-font-style-it\">good paths</span>. Since this number can be very large, output it modulo $$$10^9 + 7$$$. Two <span class=\"tex-font-style-it\">good paths</span> are considered different if the starting cell differs or there exists an integer $$$i \\in [1, k]$$$ such that the current cell of the robot after exactly $$$i$$$ moves is different in those paths.</p><p>You must process $$$q$$$ updates to $$$a$$$ and print the updated sum each time. Each update changes the value of exactly one cell. See the input format and the sample input-output for more details.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line of the input contains three space-separated integers $$$n$$$, $$$k$$$ and $$$q$$$ ($$$2 \\le n \\le 5000$$$; $$$1 \\le k \\le 5000$$$; $$$1 \\le q \\le 2 \\cdot 10^5$$$).</p><p>The second line of the input contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$).</p><p>$$$q$$$ lines follow. Each line contains two space-separated integers $$$i$$$ and $$$x$$$ ($$$1 \\le i \\le n$$$; $$$1 \\le x \\le 10^9$$$) indicating that you must change the value of $$$a_i$$$ to $$$x$$$.</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>Print $$$q$$$ integers. The $$$i$$$-th integer should be the sum of values over all <span class=\"tex-font-style-it\">good paths</span> after the first $$$i$$$ updates are performed. Since the answers may be large, print them modulo $$$10^9 + 7$$$.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>In the first example, the <span class=\"tex-font-style-it\">good paths</span> are $$$(1, 2), (2, 1), (2, 3), (3, 2), (3, 4), (4, 3), (4, 5), (5, 4)$$$.</p><p>Initially the values of $$$a$$$ are $$$[3, 5, 1, 4, 2]$$$. After the first update, they become $$$[9, 5, 1, 4, 2]$$$. After the second update, they become $$$[9, 4, 1, 4, 2]$$$, and so on.</p>","sampleTestcases":[{"id":1612200351900,"input":"5 1 5\n3 5 1 4 2\n1 9\n2 4\n3 6\n4 6\n5 2\n","output":"62\n58\n78\n86\n86\n"},{"id":1612200351901,"input":"5 2 5\n3 5 1 4 2\n1 9\n2 4\n3 6\n4 6\n5 2\n","output":"157\n147\n207\n227\n227\n"},{"id":1612200351902,"input":"4 40 6\n92 21 82 46\n3 56\n1 72\n4 28\n1 97\n2 49\n2 88\n","output":"239185261\n666314041\n50729936\n516818968\n766409450\n756910476\n"}],"submitUrl":"https://codeforces.com/contest/1467/submit","language":"c++"}