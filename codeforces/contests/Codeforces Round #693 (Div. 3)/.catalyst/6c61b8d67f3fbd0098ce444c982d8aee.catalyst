{"title":"E. Correct Placement","contestId":"1472","problemIndex":"E","timeLimit":"4 seconds","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>Polycarp has invited $$$n$$$ friends to celebrate the New Year. During the celebration, he decided to take a group photo of all his friends. Each friend can stand or lie on the side.</p><p>Each friend is characterized by two values $$$h_i$$$ (their height) and $$$w_i$$$ (their width). On the photo the $$$i$$$-th friend will occupy a rectangle $$$h_i \\times w_i$$$ (if they are standing) or $$$w_i \\times h_i$$$ (if they are lying on the side).</p><p>The $$$j$$$-th friend can be placed in front of the $$$i$$$-th friend on the photo if his rectangle is lower and narrower than the rectangle of the $$$i$$$-th friend. Formally, <span class=\"tex-font-style-bf\">at least one</span> of the following conditions must be fulfilled:</p><ul> <li> $$$h_j &lt; h_i$$$ <span class=\"tex-font-style-bf\">and</span> $$$w_j &lt; w_i$$$ (both friends are standing or both are lying); </li><li> $$$w_j &lt; h_i$$$ <span class=\"tex-font-style-bf\">and</span> $$$h_j &lt; w_i$$$ (one of the friends is standing and the other is lying). </li></ul><p>For example, if $$$n = 3$$$, $$$h=[3,5,3]$$$ and $$$w=[4,4,3]$$$, then:</p><ul> <li> the first friend can be placed in front of the second: $$$w_1 &lt; h_2$$$ and $$$h_1 &lt; w_2$$$ (one of the them is standing and the other one is lying); </li><li> the third friend can be placed in front of the second: $$$h_3 &lt; h_2$$$ and $$$w_3 &lt; w_2$$$ (both friends are standing or both are lying). </li></ul><p>In other cases, the person in the foreground will overlap the person in the background.</p><p>Help Polycarp for each $$$i$$$ find any $$$j$$$, such that the $$$j$$$-th friend can be located in front of the $$$i$$$-th friend (i.e. at least one of the conditions above is fulfilled).</p><p>Please note that you do not need to find the arrangement of all people for a group photo. You just need to find for each friend $$$i$$$ any other friend $$$j$$$ who can be located in front of him. Think about it as you need to solve $$$n$$$ separate independent subproblems.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line contains one integer $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$)&#xA0;&#x2014; the number of test cases. Then $$$t$$$ test cases follow.</p><p>The first line of each test case contains one integer $$$n$$$ ($$$1 \\leq n \\leq 2 \\cdot 10^5$$$)&#xA0;&#x2014; the number of friends.</p><p>This is followed by $$$n$$$ lines, each of which contains a description of the corresponding friend. Each friend is described by two integers $$$h_i$$$ and $$$w_i$$$ ($$$1 \\leq h_i, w_i \\leq 10^9$$$)&#xA0;&#x2014; height and width of the $$$i$$$-th friend, respectively.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>For each test case output $$$n$$$ integers on a separate line, where the $$$i$$$-th number is the index of a friend that can be placed in front of the $$$i$$$-th. If there is no such friend, then output <span class=\"tex-font-style-tt\">-1</span>.</p><p>If there are several answers, output any.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>The first test case is described in the statement.</p><p>In the third test case, the following answers are also correct: </p><ul> <li> $$$[-1, -1, 1, 2]$$$; </li><li> $$$[-1, -1, 1, 1]$$$; </li><li> $$$[-1, -1, 2, 1]$$$. </li></ul>","sampleTestcases":[{"id":1612198400632,"input":"4\n3\n3 4\n5 4\n3 3\n3\n1 3\n2 2\n3 1\n4\n2 2\n3 1\n6 3\n5 4\n4\n2 2\n2 3\n1 1\n4 4\n","output":"-1 3 -1 \n-1 -1 -1 \n-1 -1 2 2 \n3 3 -1 3 \n"}],"submitUrl":"https://codeforces.com/contest/1472/submit","language":"c++"}