{"title":"D. Cleaning","contestId":"1474","problemIndex":"D","timeLimit":"2 seconds","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>During cleaning the coast, Alice found $$$n$$$ piles of stones. The $$$i$$$-th pile has $$$a_i$$$ stones.</p><p>Piles $$$i$$$ and $$$i + 1$$$ are neighbouring for all $$$1 \\leq i \\leq n - 1$$$. If pile $$$i$$$ becomes empty, piles $$$i - 1$$$ and $$$i + 1$$$ <span class=\"tex-font-style-bf\">doesn&apos;t</span> become neighbouring.</p><p>Alice is too lazy to remove these stones, so she asked you to take this duty. She allowed you to do only the following operation: </p><ul> <li> Select two <span class=\"tex-font-style-bf\">neighboring</span> piles and, if both of them are not empty, remove one stone from each of them. </li></ul><p>Alice understands that sometimes it&apos;s impossible to remove all stones with the given operation, so she allowed you to use the following superability: </p><ul> <li> Before the start of cleaning, you can select two <span class=\"tex-font-style-bf\">neighboring</span> piles and swap them. </li></ul><p>Determine, if it is possible to remove all stones using the superability <span class=\"tex-font-style-bf\">not more than once</span>.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$)&#xA0;&#x2014; the number of test cases.</p><p>The first line of each test case contains the single integer $$$n$$$ ($$$2 \\leq n \\leq 2 \\cdot 10^5$$$)&#xA0;&#x2014; the number of piles.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$)&#xA0;&#x2014; the number of stones in each pile.</p><p>It is guaranteed that the total sum of $$$n$$$ over all test cases doesn&apos;t exceed $$$2 \\cdot 10^5$$$.</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>For each test case, print <span class=\"tex-font-style-tt\">YES</span> or <span class=\"tex-font-style-tt\">NO</span>&#xA0;&#x2014; is it possible to remove all stones using the superability <span class=\"tex-font-style-bf\">not more than once</span> or not.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>In the first test case, you can remove all stones without using a superability: $$$[1, 2, 1] \\rightarrow [1, 1, 0] \\rightarrow [0, 0, 0]$$$.</p><p>In the second test case, you can apply superability to the second and the third piles and then act like in the first testcase.</p><p>In the third test case, you can apply superability to the fourth and the fifth piles, thus getting $$$a = [2, 2, 2, 3, 1]$$$.</p><p>In the fourth test case, you can apply superability to the first and the second piles, thus getting $$$a = [1900, 2100, 1600, 3000, 1600]$$$.</p>","sampleTestcases":[{"id":1612199881747,"input":"5\n3\n1 2 1\n3\n1 1 2\n5\n2 2 2 1 3\n5\n2100 1900 1600 3000 1600\n2\n2443 2445\n","output":"YES\nYES\nYES\nYES\nNO\n"}],"submitUrl":"https://codeforces.com/contest/1474/submit","language":"c++"}